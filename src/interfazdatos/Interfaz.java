/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfazdatos;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author juan_
 */
public class Interfaz extends javax.swing.JFrame {

    /**
     * Creates new form Interfaz
     */
    public Interfaz() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "IP", "S.O.", "Velocidad CPU", "Uso CPU", "RAM Total", "Uso de RAM"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }

    public void updateTable() {
        //Inicializamos las variables de control que nos ayudaran a imprimir los datos en la tabla
        String ip = null, so = null, vp = null, up = null, ram = null, freeram = null;
        //Variable de control booleana 
        Boolean existe = false;
        //Se llama al modelo de la tabla
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        //For que recorre el ArrayList clientes para imprimir los datos en la tabla
        for (client cliente : InterfazDatos.clientes) {
            //Se asignan sus datos para utilizarlos despues
            ip = cliente.ip;
            so = "";
            vp = cliente.vProcesador;
            up = cliente.uProcesador;
            ram = cliente.ram;
            freeram = cliente.freeram;
            //Se recorre la tabla en busca de la existencia de el cliente
            for (int i = 0; i < modelo.getRowCount(); i++) {
                //Si el cliente se encuentra en la tabla entonces si existe, sino se encuentra no existe
                if (ip.equals(modelo.getValueAt(i, 0))) {
                    existe = true;
                    break;
                }else{
                    existe = false;
                }
            }
            //Si no existe el cliente en la tabla agregarlo a la tabla
            if (!existe) {
                modelo.addRow(new Object[]{ip, so, vp, up, ram, freeram});
            }
            //Si existe el cliente en la tabla, actualzar su dato del uso de procesador
            else if(existe){
                actualizarfilas(ip, up);
            }
        }
        
        //Modelo
        modelo = (DefaultTableModel) jTable1.getModel();
        //Se llama al modelo de la tabla
        jTable1 = new JTable(modelo);
        //Se le notifica al modelo que los datos cambiaron
        modelo.fireTableDataChanged();
        //Se vuelve visible la tabla
        setVisible(true);
        //Se redibuja la tabla
        repaint();
    }

    public static void actualizarfilas(String ip, String uProc) {
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        for (int f = 0; f < modelo.getRowCount(); f++) {
            if (modelo.getValueAt(f, 0).equals(ip)) {
                modelo.setValueAt(uProc, f, 3);
            }
        }
    }

    public static void eliminarfilas(String ip) {
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        for (int f = 0; f < modelo.getRowCount(); f++) {
            System.out.println(modelo.getValueAt(f, 0).equals(ip));
            if (modelo.getValueAt(f, 0).equals(ip)) {
                modelo.removeRow(f);
            }
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
